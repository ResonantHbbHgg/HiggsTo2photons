#include "Normalization_8TeV.h"

Normalization_8TeV::Normalization_8TeV(){
  BranchingRatioMap[90]=0.00123;
  BranchingRatioMap[95]=0.0014;
  BranchingRatioMap[100]=0.00159;
  BranchingRatioMap[105]=0.00178;
  BranchingRatioMap[110]=0.00197;
  BranchingRatioMap[110.5]=0.00199;
  BranchingRatioMap[111]=0.002;
  BranchingRatioMap[111.5]=0.00202;
  BranchingRatioMap[112]=0.00204;
  BranchingRatioMap[112.5]=0.00205;
  BranchingRatioMap[113]=0.00207;
  BranchingRatioMap[113.5]=0.00209;
  BranchingRatioMap[114]=0.0021;
  BranchingRatioMap[114.5]=0.00212;
  BranchingRatioMap[115]=0.00213;
  BranchingRatioMap[115.5]=0.00215;
  BranchingRatioMap[116]=0.00216;
  BranchingRatioMap[116.5]=0.00217;
  BranchingRatioMap[117]=0.00218;
  BranchingRatioMap[117.5]=0.0022;
  BranchingRatioMap[118]=0.00221;
  BranchingRatioMap[118.5]=0.00222;
  BranchingRatioMap[119]=0.00223;
  BranchingRatioMap[119.5]=0.00224;
  BranchingRatioMap[120]=0.00225;
  BranchingRatioMap[120.5]=0.00226;
  BranchingRatioMap[121]=0.00226;
  BranchingRatioMap[121.5]=0.00227;
  BranchingRatioMap[122]=0.00228;
  BranchingRatioMap[122.5]=0.00228;
  BranchingRatioMap[123]=0.00228;
  BranchingRatioMap[123.5]=0.00229;
  BranchingRatioMap[124]=0.00229;
  BranchingRatioMap[124.5]=0.00229;
  BranchingRatioMap[125]=0.00229;
  BranchingRatioMap[125.5]=0.00229;
  BranchingRatioMap[126]=0.00229;
  BranchingRatioMap[126.5]=0.00229;
  BranchingRatioMap[127]=0.00229;
  BranchingRatioMap[127.5]=0.00229;
  BranchingRatioMap[128]=0.00228;
  BranchingRatioMap[128.5]=0.00228;
  BranchingRatioMap[129]=0.00227;
  BranchingRatioMap[129.5]=0.00227;
  BranchingRatioMap[130]=0.00226;
  BranchingRatioMap[130.5]=0.00225;
  BranchingRatioMap[131]=0.00224;
  BranchingRatioMap[131.5]=0.00223;
  BranchingRatioMap[132]=0.00222;
  BranchingRatioMap[132.5]=0.00221;
  BranchingRatioMap[133]=0.00219;
  BranchingRatioMap[133.5]=0.00218;
  BranchingRatioMap[134]=0.00217;
  BranchingRatioMap[134.5]=0.00215;
  BranchingRatioMap[135]=0.00213;
  BranchingRatioMap[135.5]=0.00212;
  BranchingRatioMap[136]=0.0021;
  BranchingRatioMap[136.5]=0.00208;
  BranchingRatioMap[137]=0.00206;
  BranchingRatioMap[137.5]=0.00204;
  BranchingRatioMap[138]=0.00202;
  BranchingRatioMap[138.5]=0.002;
  BranchingRatioMap[139]=0.00198;
  BranchingRatioMap[139.5]=0.00196;
  BranchingRatioMap[140]=0.00193;
  BranchingRatioMap[141]=0.00189;
  BranchingRatioMap[142]=0.00184;
  BranchingRatioMap[143]=0.00178;
  BranchingRatioMap[144]=0.00173;
  BranchingRatioMap[145]=0.00167;
  BranchingRatioMap[146]=0.00162;
  BranchingRatioMap[147]=0.00156;
  BranchingRatioMap[148]=0.00149;
  BranchingRatioMap[149]=0.00143;
  BranchingRatioMap[150]=0.00136;
  BranchingRatioMap[151]=0.0013;
  BranchingRatioMap[152]=0.00123;
  BranchingRatioMap[153]=0.00115;
  BranchingRatioMap[154]=0.00108;
  BranchingRatioMap[155]=0.000999;
  BranchingRatioMap[156]=0.000914;
  BranchingRatioMap[157]=0.000825;
  BranchingRatioMap[158]=0.000729;
  BranchingRatioMap[159]=0.000628;
  BranchingRatioMap[160]=0.000532;
  BranchingRatioMap[162]=0.00037;
  BranchingRatioMap[164]=0.000259;
  BranchingRatioMap[166]=0.000208;
  BranchingRatioMap[168]=0.000178;
  BranchingRatioMap[170]=0.000158;
  BranchingRatioMap[172]=0.000143;
  BranchingRatioMap[174]=0.000132;
  BranchingRatioMap[176]=0.000122;
  BranchingRatioMap[178]=0.000113;
  BranchingRatioMap[180]=0.000105;
  BranchingRatioMap[182]=0.0000968;
  BranchingRatioMap[184]=0.0000881;
  BranchingRatioMap[186]=0.0000809;
  BranchingRatioMap[188]=0.0000752;
  BranchingRatioMap[190]=0.0000705;
  BranchingRatioMap[192]=0.0000666;
  BranchingRatioMap[194]=0.0000632;
  BranchingRatioMap[196]=0.0000602;
  BranchingRatioMap[198]=0.0000575;
  BranchingRatioMap[200]=0.0000551;
  BranchingRatioMap[202]=0.0000529;
  BranchingRatioMap[204]=0.0000508;
  BranchingRatioMap[206]=0.0000489;
  BranchingRatioMap[208]=0.0000471;
  BranchingRatioMap[210]=0.0000454;
  BranchingRatioMap[212]=0.0000439;
  BranchingRatioMap[214]=0.0000424;
  BranchingRatioMap[216]=0.000041;
  BranchingRatioMap[218]=0.0000396;
  BranchingRatioMap[220]=0.0000384;
  BranchingRatioMap[222]=0.0000372;
  BranchingRatioMap[224]=0.000036;
  BranchingRatioMap[226]=0.0000349;
  BranchingRatioMap[228]=0.0000339;
  BranchingRatioMap[230]=0.0000328;
  BranchingRatioMap[232]=0.0000319;
  BranchingRatioMap[234]=0.0000309;
  BranchingRatioMap[236]=0.0000301;
  BranchingRatioMap[238]=0.0000292;
  BranchingRatioMap[240]=0.0000284;
  BranchingRatioMap[242]=0.0000276;
  BranchingRatioMap[244]=0.0000268;
  BranchingRatioMap[246]=0.0000261;
  BranchingRatioMap[248]=0.0000254;
  BranchingRatioMap[250]=0.0000247;

  //GGH X-Sections
    XSectionMap_ggh[80]=46.0593;
    XSectionMap_ggh[81]=44.9777;
    XSectionMap_ggh[82]=43.9344;
    XSectionMap_ggh[83]=42.928; 
    XSectionMap_ggh[84]=41.9566;
    XSectionMap_ggh[85]=41.0179;
    XSectionMap_ggh[86]=40.1112;
    XSectionMap_ggh[87]=39.2347;
    XSectionMap_ggh[88]=38.3868;
    XSectionMap_ggh[89]=37.5664;
    XSectionMap_ggh[90]=36.7719;
    XSectionMap_ggh[91]=36.0024;
    XSectionMap_ggh[92]=35.2565;
    XSectionMap_ggh[93]=34.5342;
    XSectionMap_ggh[94]=33.833; 
    XSectionMap_ggh[95]=33.1525;
    XSectionMap_ggh[96]=32.4924;
    XSectionMap_ggh[97]=31.8511;
    XSectionMap_ggh[98]=31.2283;
    XSectionMap_ggh[99]=30.6236;
    XSectionMap_ggh[100]=30.0891;
    XSectionMap_ggh[101]=29.5154;
    XSectionMap_ggh[102]=28.9585;
    XSectionMap_ggh[103]=28.4107;
    XSectionMap_ggh[104]=27.8856;
    XSectionMap_ggh[105]=27.3602;
    XSectionMap_ggh[106]=26.8628;
    XSectionMap_ggh[107]=26.3911;
    XSectionMap_ggh[108]=25.9199;
    XSectionMap_ggh[109]=25.4603;
    XSectionMap_ggh[110]=25.0119;
    XSectionMap_ggh[110.5]=24.7918;
    XSectionMap_ggh[111]=24.5743;
    XSectionMap_ggh[111.5]=24.3597;
    XSectionMap_ggh[112]=24.1486;
    XSectionMap_ggh[112.5]=23.9401;
    XSectionMap_ggh[113]=23.7343;
    XSectionMap_ggh[113.5]=23.5312;
    XSectionMap_ggh[114]=23.3306;
    XSectionMap_ggh[114.5]=23.1325;
    XSectionMap_ggh[115]=22.9369;
    XSectionMap_ggh[115.5]=22.7442;
    XSectionMap_ggh[116]=22.5534;
    XSectionMap_ggh[116.5]=22.3651;
    XSectionMap_ggh[117]=22.179; 
    XSectionMap_ggh[117.5]=21.9949;
    XSectionMap_ggh[118]=21.8134;
    XSectionMap_ggh[118.5]=21.6341;
    XSectionMap_ggh[119]=21.457; 
    XSectionMap_ggh[119.5]=21.282; 
    XSectionMap_ggh[120]=21.109; 
    XSectionMap_ggh[120.5]=20.9381;
    XSectionMap_ggh[121]=20.7692;
    XSectionMap_ggh[121.5]=20.6023;
    XSectionMap_ggh[122]=20.4373;
    XSectionMap_ggh[122.5]=20.2742;
    XSectionMap_ggh[123]=20.1131;
    XSectionMap_ggh[123.5]=19.9538;
    XSectionMap_ggh[124]=19.7963;
    XSectionMap_ggh[124.5]=19.6407;
    XSectionMap_ggh[125]=19.4868;
    XSectionMap_ggh[125.5]=19.3347;
    XSectionMap_ggh[126]=19.1843;
    XSectionMap_ggh[126.5]=19.0357;
    XSectionMap_ggh[127]=18.8887;
    XSectionMap_ggh[127.5]=18.7433;
    XSectionMap_ggh[128]=18.5996;
    XSectionMap_ggh[128.5]=18.4574;
    XSectionMap_ggh[129]=18.3169;
    XSectionMap_ggh[129.5]=18.1778;
    XSectionMap_ggh[130]=18.0403;
    XSectionMap_ggh[130.5]=17.9043;
    XSectionMap_ggh[131]=17.7698;
    XSectionMap_ggh[131.5]=17.6368;
    XSectionMap_ggh[132]=17.5053;
    XSectionMap_ggh[132.5]=17.3752;
    XSectionMap_ggh[133]=17.2464;
    XSectionMap_ggh[133.5]=17.1191;
    XSectionMap_ggh[134]=16.993; 
    XSectionMap_ggh[134.5]=16.8683;
    XSectionMap_ggh[135]=16.7448;
    XSectionMap_ggh[135.5]=16.6226;
    XSectionMap_ggh[136]=16.5017;
    XSectionMap_ggh[136.5]=16.382; 
    XSectionMap_ggh[137]=16.2635;
    XSectionMap_ggh[137.5]=16.1463;
    XSectionMap_ggh[138]=16.0303;
    XSectionMap_ggh[138.5]=15.9155;
    XSectionMap_ggh[139]=15.8019;
    XSectionMap_ggh[139.5]=15.6894;
    XSectionMap_ggh[140]=15.5782;
    XSectionMap_ggh[141]=15.3592;
    XSectionMap_ggh[142]=15.1446;
    XSectionMap_ggh[143]=14.9342;
    XSectionMap_ggh[144]=14.7278;
    XSectionMap_ggh[145]=14.5253;
    XSectionMap_ggh[146]=14.3267;
    XSectionMap_ggh[147]=14.1318;
    XSectionMap_ggh[148]=13.9404;
    XSectionMap_ggh[149]=13.7522;
    XSectionMap_ggh[150]=13.5672;
    XSectionMap_ggh[151]=13.3852;
    XSectionMap_ggh[152]=13.2057;
    XSectionMap_ggh[153]=13.0284;
    XSectionMap_ggh[154]=12.8527;
    XSectionMap_ggh[155]=12.6779;
    XSectionMap_ggh[156]=12.5028;
    XSectionMap_ggh[157]=12.3256;
    XSectionMap_ggh[158]=12.1439;
    XSectionMap_ggh[159]=11.9554;
    XSectionMap_ggh[160]=11.7624;
    XSectionMap_ggh[162]=11.3963;
    XSectionMap_ggh[164]=11.0387;
    XSectionMap_ggh[166]=10.7032;
    XSectionMap_ggh[168]=10.3946;
    XSectionMap_ggh[170]=10.1077;
    XSectionMap_ggh[172]=9.8376;
    XSectionMap_ggh[174]=9.5807;
    XSectionMap_ggh[176]=9.3337;
    XSectionMap_ggh[178]=9.0926;
    XSectionMap_ggh[180]=8.8521;
    XSectionMap_ggh[182]=8.6143;
    XSectionMap_ggh[184]=8.3939;
    XSectionMap_ggh[186]=8.179; 
    XSectionMap_ggh[188]=7.9739;
    XSectionMap_ggh[190]=7.7803;
    XSectionMap_ggh[192]=7.5975;
    XSectionMap_ggh[194]=7.4242;
    XSectionMap_ggh[196]=7.259; 
    XSectionMap_ggh[198]=7.101; 
    XSectionMap_ggh[200]=6.9497;
    XSectionMap_ggh[202]=6.8042;
    XSectionMap_ggh[204]=6.6642;
    XSectionMap_ggh[206]=6.5296;
    XSectionMap_ggh[208]=6.3999;
    XSectionMap_ggh[210]=6.2744;
    XSectionMap_ggh[212]=6.1533;
    XSectionMap_ggh[214]=6.0364;
    XSectionMap_ggh[216]=5.9234;
    XSectionMap_ggh[218]=5.8142;
    XSectionMap_ggh[220]=5.7085;
    XSectionMap_ggh[222]=5.6061;
    XSectionMap_ggh[224]=5.5071;
    XSectionMap_ggh[226]=5.4112;
    XSectionMap_ggh[228]=5.3183;
    XSectionMap_ggh[230]=5.2283;
    XSectionMap_ggh[232]=5.141; 
    XSectionMap_ggh[234]=5.0563;
    XSectionMap_ggh[236]=4.974; 
    XSectionMap_ggh[238]=4.8944;
    XSectionMap_ggh[240]=4.817; 
    XSectionMap_ggh[242]=4.7418;
    XSectionMap_ggh[244]=4.6689;
    XSectionMap_ggh[246]=4.5981;
    XSectionMap_ggh[248]=4.5294;
    XSectionMap_ggh[250]=4.4627;
    XSectionMap_ggh[252]=4.398; 
    XSectionMap_ggh[254]=4.3351;
    XSectionMap_ggh[256]=4.2741;
    XSectionMap_ggh[258]=4.2149;
    XSectionMap_ggh[260]=4.1574;
    XSectionMap_ggh[262]=4.1016;
    XSectionMap_ggh[264]=4.0709;
    XSectionMap_ggh[266]=3.9951;
    XSectionMap_ggh[268]=3.9442;
    XSectionMap_ggh[270]=3.8949;
    XSectionMap_ggh[272]=3.8471;
    XSectionMap_ggh[274]=3.8009;
    XSectionMap_ggh[276]=3.7561;
    XSectionMap_ggh[278]=3.7128;
    XSectionMap_ggh[280]=3.6709;
    XSectionMap_ggh[282]=3.6302;
    XSectionMap_ggh[284]=3.591; 
    XSectionMap_ggh[286]=3.553; 
    XSectionMap_ggh[288]=3.5164;
    XSectionMap_ggh[290]=3.4811;
    XSectionMap_ggh[295]=3.3986;
    XSectionMap_ggh[300]=3.324;

    // VBF X-sections
    XSectionMap_vbf[80.0]=2.410;
    XSectionMap_vbf[81.0]=2.384;
    XSectionMap_vbf[82.0]=2.360;
    XSectionMap_vbf[83.0]=2.336;
    XSectionMap_vbf[84.0]=2.311;
    XSectionMap_vbf[85.0]=2.289;
    XSectionMap_vbf[86.0]=2.265;
    XSectionMap_vbf[87.0]=2.243;
    XSectionMap_vbf[88.0]=2.221;
    XSectionMap_vbf[89.0]=2.199;
    XSectionMap_vbf[90.0]=2.176;
    XSectionMap_vbf[91.0]=2.154;
    XSectionMap_vbf[92.0]=2.133;
    XSectionMap_vbf[93.0]=2.112;
    XSectionMap_vbf[94.0]=2.090;
    XSectionMap_vbf[95.0]=2.071;
    XSectionMap_vbf[96.0]=2.050;
    XSectionMap_vbf[97.0]=2.030;
    XSectionMap_vbf[98.0]=2.010;
    XSectionMap_vbf[99.0]=1.991;
    XSectionMap_vbf[100.0]=1.971;
    XSectionMap_vbf[101.0]=1.952;
    XSectionMap_vbf[102.0]=1.934;
    XSectionMap_vbf[103.0]=1.915;
    XSectionMap_vbf[104.0]=1.897;
    XSectionMap_vbf[105.0]=1.878;
    XSectionMap_vbf[106.0]=1.860;
    XSectionMap_vbf[107.0]=1.843;
    XSectionMap_vbf[108.0]=1.826;
    XSectionMap_vbf[109.0]=1.808;
    XSectionMap_vbf[110.0]=1.791;
    XSectionMap_vbf[110.5]=1.783;
    XSectionMap_vbf[111.0]=1.775;
    XSectionMap_vbf[111.5]=1.766;
    XSectionMap_vbf[112.0]=1.758;
    XSectionMap_vbf[112.5]=1.750;
    XSectionMap_vbf[113.0]=1.742;
    XSectionMap_vbf[113.5]=1.733;
    XSectionMap_vbf[114.0]=1.725;
    XSectionMap_vbf[114.5]=1.717;
    XSectionMap_vbf[115.0]=1.709;
    XSectionMap_vbf[115.5]=1.701;
    XSectionMap_vbf[116.0]=1.693;
    XSectionMap_vbf[116.5]=1.686;
    XSectionMap_vbf[117.0]=1.678;
    XSectionMap_vbf[117.5]=1.670;
    XSectionMap_vbf[118.0]=1.661;
    XSectionMap_vbf[118.5]=1.654;
    XSectionMap_vbf[119.0]=1.647;
    XSectionMap_vbf[119.5]=1.639;
    XSectionMap_vbf[120.0]=1.632;
    XSectionMap_vbf[120.5]=1.624;
    XSectionMap_vbf[121.0]=1.617;
    XSectionMap_vbf[121.5]=1.609;
    XSectionMap_vbf[122.0]=1.602;
    XSectionMap_vbf[122.5]=1.595;
    XSectionMap_vbf[123.0]=1.588;
    XSectionMap_vbf[123.5]=1.580;
    XSectionMap_vbf[124.0]=1.573;
    XSectionMap_vbf[124.5]=1.566;
    XSectionMap_vbf[125.0]=1.559;
    XSectionMap_vbf[125.5]=1.552;
    XSectionMap_vbf[126.0]=1.544;
    XSectionMap_vbf[126.5]=1.539;
    XSectionMap_vbf[127.0]=1.531;
    XSectionMap_vbf[127.5]=1.524;
    XSectionMap_vbf[128.0]=1.517;
    XSectionMap_vbf[128.5]=1.511;
    XSectionMap_vbf[129.0]=1.504;
    XSectionMap_vbf[129.5]=1.497;
    XSectionMap_vbf[130.0]=1.490;
    XSectionMap_vbf[130.5]=1.483;
    XSectionMap_vbf[131.0]=1.477;
    XSectionMap_vbf[131.5]=1.470;
    XSectionMap_vbf[132.0]=1.463;
    XSectionMap_vbf[132.5]=1.458;
    XSectionMap_vbf[133.0]=1.451;
    XSectionMap_vbf[133.5]=1.444;
    XSectionMap_vbf[134.0]=1.439;
    XSectionMap_vbf[134.5]=1.432;
    XSectionMap_vbf[135.0]=1.425;
    XSectionMap_vbf[135.5]=1.419;
    XSectionMap_vbf[136.0]=1.413;
    XSectionMap_vbf[136.5]=1.407;
    XSectionMap_vbf[137.0]=1.401;
    XSectionMap_vbf[137.5]=1.395;
    XSectionMap_vbf[138.0]=1.388;
    XSectionMap_vbf[138.5]=1.382;
    XSectionMap_vbf[139.0]=1.376;
    XSectionMap_vbf[139.5]=1.370;
    XSectionMap_vbf[140.0]=1.365;
    XSectionMap_vbf[141.0]=1.352;
    XSectionMap_vbf[142.0]=1.341;
    XSectionMap_vbf[143.0]=1.329;
    XSectionMap_vbf[144.0]=1.317;
    XSectionMap_vbf[145.0]=1.306;
    XSectionMap_vbf[146.0]=1.295;
    XSectionMap_vbf[147.0]=1.284;
    XSectionMap_vbf[148.0]=1.272;
    XSectionMap_vbf[149.0]=1.261;
    XSectionMap_vbf[150.0]=1.251;
    XSectionMap_vbf[151.0]=1.240;
    XSectionMap_vbf[152.0]=1.229;
    XSectionMap_vbf[153.0]=1.218;
    XSectionMap_vbf[154.0]=1.208;
    XSectionMap_vbf[155.0]=1.197;
    XSectionMap_vbf[156.0]=1.187;
    XSectionMap_vbf[157.0]=1.176;
    XSectionMap_vbf[158.0]=1.166;
    XSectionMap_vbf[159.0]=1.155;
    XSectionMap_vbf[160.0]=1.146;
    XSectionMap_vbf[162.0]=1.136;
    XSectionMap_vbf[164.0]=1.123;
    XSectionMap_vbf[165.0]=1.115;
    XSectionMap_vbf[166.0]=1.106;
    XSectionMap_vbf[168.0]=1.088;
    XSectionMap_vbf[170.0]=1.070;
    XSectionMap_vbf[172.0]=1.052;
    XSectionMap_vbf[174.0]=1.035;
    XSectionMap_vbf[175.0]=1.026;
    XSectionMap_vbf[176.0]=1.017;
    XSectionMap_vbf[178.0]=1.000;
    XSectionMap_vbf[180.0]=0.982;
    XSectionMap_vbf[182.0]=0.967;
    XSectionMap_vbf[184.0]=0.9558;
    XSectionMap_vbf[185.0]=0.9496;
    XSectionMap_vbf[186.0]=0.9429;
    XSectionMap_vbf[188.0]=0.9286;
    XSectionMap_vbf[190.0]=0.9139;
    XSectionMap_vbf[192.0]=0.8998;
    XSectionMap_vbf[194.0]=0.8854;
    XSectionMap_vbf[195.0]=0.8783;
    XSectionMap_vbf[196.0]=0.8714;
    XSectionMap_vbf[198.0]=0.8574;
    XSectionMap_vbf[200.0]=0.8441;
    XSectionMap_vbf[202.0]=0.8309;
    XSectionMap_vbf[204.0]=0.8178;
    XSectionMap_vbf[206.0]=0.8051;
    XSectionMap_vbf[208.0]=0.7927;
    XSectionMap_vbf[210.0]=0.7805;
    XSectionMap_vbf[212.0]=0.7687;
    XSectionMap_vbf[214.0]=0.7568;
    XSectionMap_vbf[216.0]=0.7452;
    XSectionMap_vbf[218.0]=0.7340;
    XSectionMap_vbf[220.0]=0.7229;
    XSectionMap_vbf[222.0]=0.7120;
    XSectionMap_vbf[224.0]=0.7016;
    XSectionMap_vbf[226.0]=0.6913;
    XSectionMap_vbf[228.0]=0.6808;
    XSectionMap_vbf[230.0]=0.6707;
    XSectionMap_vbf[232.0]=0.6610;
    XSectionMap_vbf[234.0]=0.6513;
    XSectionMap_vbf[236.0]=0.6418;
    XSectionMap_vbf[238.0]=0.6326;
    XSectionMap_vbf[240.0]=0.6234;
    XSectionMap_vbf[242.0]=0.6144;
    XSectionMap_vbf[244.0]=0.6056;
    XSectionMap_vbf[246.0]=0.5969;
    XSectionMap_vbf[248.0]=0.5885;
    XSectionMap_vbf[250.0]=0.5802;
    XSectionMap_vbf[252.0]=0.5720;
    XSectionMap_vbf[254.0]=0.5640;
    XSectionMap_vbf[256.0]=0.5562;
    XSectionMap_vbf[258.0]=0.5484;
    XSectionMap_vbf[260.0]=0.5408;
    XSectionMap_vbf[262.0]=0.5333;
    XSectionMap_vbf[264.0]=0.5259;
    XSectionMap_vbf[266.0]=0.5187;
    XSectionMap_vbf[268.0]=0.5116;
    XSectionMap_vbf[270.0]=0.5047;
    XSectionMap_vbf[272.0]=0.4978;
    XSectionMap_vbf[274.0]=0.4910;
    XSectionMap_vbf[276.0]=0.4845;
    XSectionMap_vbf[278.0]=0.4780;
    XSectionMap_vbf[280.0]=0.4715;
    XSectionMap_vbf[282.0]=0.4652;
    XSectionMap_vbf[284.0]=0.4590;
    XSectionMap_vbf[286.0]=0.4530;
    XSectionMap_vbf[288.0]=0.4470;
    XSectionMap_vbf[290.0]=0.4716;
    XSectionMap_vbf[295.0]=0.4562;
    XSectionMap_vbf[300.0]=0.4408;
    XSectionMap_vbf[305.0]=0.4266;
    XSectionMap_vbf[310.0]=0.4131;
    XSectionMap_vbf[315.0]=0.3999;
    XSectionMap_vbf[320.0]=0.3875;
    XSectionMap_vbf[325.0]=0.3753;
    XSectionMap_vbf[330.0]=0.3637;
    XSectionMap_vbf[335.0]=0.3526;
    XSectionMap_vbf[340.0]=0.3422;
    XSectionMap_vbf[345.0]=0.3303;
    XSectionMap_vbf[350.0]=0.3200;
    XSectionMap_vbf[360.0]=0.3028;
    XSectionMap_vbf[370.0]=0.2896;
    XSectionMap_vbf[380.0]=0.2776;
    XSectionMap_vbf[390.0]=0.2660;
    XSectionMap_vbf[400.0]=0.2543;
    XSectionMap_vbf[420.0]=0.2317;
    XSectionMap_vbf[440.0]=0.2103;
    XSectionMap_vbf[450.0]=0.1751;
    XSectionMap_vbf[460.0]=0.1905;
    XSectionMap_vbf[480.0]=0.1724;
    XSectionMap_vbf[500.0]=0.1561;
    XSectionMap_vbf[520.0]=0.1414;
    XSectionMap_vbf[540.0]=0.1283;
    XSectionMap_vbf[550.0]=0.1038;
    XSectionMap_vbf[560.0]=0.1166;
    XSectionMap_vbf[580.0]=0.1062;
    XSectionMap_vbf[600.0]=0.09688;
    XSectionMap_vbf[620.0]=0.08861;
    XSectionMap_vbf[640.0]=0.08121;
    XSectionMap_vbf[650.0]=0.06397;
    XSectionMap_vbf[660.0]=0.07459;
    XSectionMap_vbf[680.0]=0.06865;
    XSectionMap_vbf[700.0]=0.06330;
    XSectionMap_vbf[720.0]=0.05853;
    XSectionMap_vbf[740.0]=0.05420;
    XSectionMap_vbf[750.0]=0.04058;
    XSectionMap_vbf[760.0]=0.05032;
    XSectionMap_vbf[780.0]=0.04682;
    XSectionMap_vbf[800.0]=0.04365;
    XSectionMap_vbf[820.0]=0.04078;
    XSectionMap_vbf[840.0]=0.03815;
    XSectionMap_vbf[850.0]=0.02632;
    XSectionMap_vbf[860.0]=0.03579;
    XSectionMap_vbf[880.0]=0.03363;
    XSectionMap_vbf[900.0]=0.03164;
    XSectionMap_vbf[920.0]=0.02986;
    XSectionMap_vbf[940.0]=0.02820;
    XSectionMap_vbf[950.0]=0.01719;
    XSectionMap_vbf[960.0]=0.02669;
    XSectionMap_vbf[980.0]=0.02524;
    XSectionMap_vbf[1000.0]=0.02399;

    // WZH X-Sections
    XSectionMap_wzh[90]=2.4997*1.25;
    XSectionMap_wzh[95]=2.1268*1.25;
    XSectionMap_wzh[100]=1.8173*1.25;
    XSectionMap_wzh[105]=1.5629*1.25;
    XSectionMap_wzh[110]=1.3475*1.25;
    XSectionMap_wzh[110.5]=1.3278*1.25;
    XSectionMap_wzh[111]=1.3084*1.25;
    XSectionMap_wzh[111.5]=1.2893*1.25;
    XSectionMap_wzh[112]=1.2706*1.25;
    XSectionMap_wzh[112.5]=1.2522*1.25;
    XSectionMap_wzh[113]=1.2343*1.25;
    XSectionMap_wzh[113.5]=1.2165*1.25;
    XSectionMap_wzh[114]=1.1991*1.25;
    XSectionMap_wzh[114.5]=1.1821*1.25;
    XSectionMap_wzh[115]=1.1653*1.25;
    XSectionMap_wzh[115.5]=1.1491*1.25;
    XSectionMap_wzh[116]=1.1331*1.25;
    XSectionMap_wzh[116.5]=1.1175*1.25;
    XSectionMap_wzh[117]=1.1022*1.25;
    XSectionMap_wzh[117.5]=1.0872*1.25;
    XSectionMap_wzh[118]=1.0724*1.25;
    XSectionMap_wzh[118.5]=1.0579*1.25;
    XSectionMap_wzh[119]=1.0437*1.25;
    XSectionMap_wzh[119.5]=1.0296*1.25;
    XSectionMap_wzh[120]=1.0159*1.25;
    XSectionMap_wzh[120.5]=1.0023*1.25;
    XSectionMap_wzh[121]=0.9889*1.25;
    XSectionMap_wzh[121.5]=0.9756*1.25;
    XSectionMap_wzh[122]=0.9626*1.25;
    XSectionMap_wzh[122.5]=0.9499*1.25;
    XSectionMap_wzh[123]=0.9372*1.25;
    XSectionMap_wzh[123.5]=0.9248*1.25;
    XSectionMap_wzh[124]=0.9126*1.25;
    XSectionMap_wzh[124.5]=0.9005*1.25;
    XSectionMap_wzh[125]=0.8887*1.25;
    XSectionMap_wzh[125.5]=0.8769*1.25;
    XSectionMap_wzh[126]=0.8653*1.25;
    XSectionMap_wzh[126.5]=0.8539*1.25;
    XSectionMap_wzh[127]=0.8427*1.25;
    XSectionMap_wzh[127.5]=0.8316*1.25;
    XSectionMap_wzh[128]=0.8207*1.25;
    XSectionMap_wzh[128.5]=0.8099*1.25;
    XSectionMap_wzh[129]=0.7993*1.25;
    XSectionMap_wzh[129.5]=0.7888*1.25;
    XSectionMap_wzh[130]=0.7786*1.25;
    XSectionMap_wzh[130.5]=0.7685*1.25;
    XSectionMap_wzh[131]=0.7586*1.25;
    XSectionMap_wzh[131.5]=0.7488*1.25;
    XSectionMap_wzh[132]=0.7391*1.25;
    XSectionMap_wzh[132.5]=0.7296*1.25;
    XSectionMap_wzh[133]=0.7203*1.25;
    XSectionMap_wzh[133.5]=0.7111*1.25;
    XSectionMap_wzh[134]=0.702*1.25;
    XSectionMap_wzh[134.5]=0.6931*1.25;
    XSectionMap_wzh[135]=0.6843*1.25;
    XSectionMap_wzh[135.5]=0.6756*1.25;
    XSectionMap_wzh[136]=0.667*1.25;
    XSectionMap_wzh[136.5]=0.6585*1.25;
    XSectionMap_wzh[137]=0.6503*1.25;
    XSectionMap_wzh[137.5]=0.642*1.25;
    XSectionMap_wzh[138]=0.6339*1.25;
    XSectionMap_wzh[138.5]=0.626*1.25;
    XSectionMap_wzh[139]=0.6182*1.25;
    XSectionMap_wzh[139.5]=0.6105*1.25;
    XSectionMap_wzh[140]=0.6029*1.25;
    XSectionMap_wzh[141]=0.5882*1.25;
    XSectionMap_wzh[142]=0.574*1.25;
    XSectionMap_wzh[143]=0.5602*1.25;
    XSectionMap_wzh[144]=0.5467*1.25;
    XSectionMap_wzh[145]=0.5336*1.25;
    XSectionMap_wzh[146]=0.5205*1.25;
    XSectionMap_wzh[147]=0.5078*1.25;
    XSectionMap_wzh[148]=0.4953*1.25;
    XSectionMap_wzh[149]=0.4832*1.25;
    XSectionMap_wzh[150]=0.4714*1.25;
    XSectionMap_wzh[151]=0.4602*1.25;
    XSectionMap_wzh[152]=0.4492*1.25;
    XSectionMap_wzh[153]=0.4384*1.25;
    XSectionMap_wzh[154]=0.4277*1.25;
    XSectionMap_wzh[155]=0.4171*1.25;
    XSectionMap_wzh[156]=0.4053*1.25;
    XSectionMap_wzh[157]=0.3938*1.25;
    XSectionMap_wzh[158]=0.3827*1.25;
    XSectionMap_wzh[159]=0.3722*1.25;
    XSectionMap_wzh[160]=0.3625*1.25;
    XSectionMap_wzh[162]=0.3498*1.25;
    XSectionMap_wzh[164]=0.3392*1.25;
    XSectionMap_wzh[166]=0.3271*1.25;
    XSectionMap_wzh[168]=0.313*1.25;
    XSectionMap_wzh[170]=0.2989*1.25;
    XSectionMap_wzh[172]=0.2862*1.25;
    XSectionMap_wzh[174]=0.2742*1.25;
    XSectionMap_wzh[176]=0.26262*1.25;
    XSectionMap_wzh[178]=0.2516*1.25;
    XSectionMap_wzh[180]=0.24127*1.25;
    XSectionMap_wzh[182]=0.23239*1.25;
    XSectionMap_wzh[184]=0.22416*1.25;
    XSectionMap_wzh[186]=0.21581*1.25;
    XSectionMap_wzh[188]=0.20718*1.25;
    XSectionMap_wzh[190]=0.19896*1.25;
    XSectionMap_wzh[192]=0.19139*1.25;
    XSectionMap_wzh[194]=0.18426*1.25;
    XSectionMap_wzh[196]=0.17733*1.25;
    XSectionMap_wzh[198]=0.1706*1.25;
    XSectionMap_wzh[200]=0.16416*1.25;
    XSectionMap_wzh[202]=0.15804*1.25;
    XSectionMap_wzh[204]=0.15221*1.25;
    XSectionMap_wzh[206]=0.14665*1.25;
    XSectionMap_wzh[208]=0.14133*1.25;
    XSectionMap_wzh[210]=0.13625*1.25;
    XSectionMap_wzh[212]=0.13135*1.25;
    XSectionMap_wzh[214]=0.12666*1.25;
    XSectionMap_wzh[216]=0.12218*1.25;
    XSectionMap_wzh[218]=0.11788*1.25;
    XSectionMap_wzh[220]=0.11377*1.25;
    XSectionMap_wzh[222]=0.10984*1.25;
    XSectionMap_wzh[224]=0.10607*1.25;
    XSectionMap_wzh[226]=0.10246*1.25;
    XSectionMap_wzh[228]=0.09898*1.25;
    XSectionMap_wzh[230]=0.09566*1.25;
    XSectionMap_wzh[232]=0.09244*1.25;
    XSectionMap_wzh[234]=0.08934*1.25;
    XSectionMap_wzh[236]=0.08635*1.25;
    XSectionMap_wzh[238]=0.0835*1.25;
    XSectionMap_wzh[240]=0.08074*1.25;
    XSectionMap_wzh[242]=0.07809*1.25;
    XSectionMap_wzh[244]=0.07555*1.25;
    XSectionMap_wzh[246]=0.0731*1.25;
    XSectionMap_wzh[248]=0.07075*1.25;
    XSectionMap_wzh[250]=0.06848*1.25;

    //TTH X-Sections
    XSectionMap_tth[90.0]=0.2162*1.25;
    XSectionMap_tth[95.0]=0.1880*1.25; 	
    XSectionMap_tth[100.0]=0.1638*1.25; 	
    XSectionMap_tth[105.0]=0.1433*1.25; 	
    XSectionMap_tth[110.0]=0.1257*1.25; 	
    XSectionMap_tth[110.5]=0.1241*1.25; 	
    XSectionMap_tth[111.0]=0.1225*1.25; 	
    XSectionMap_tth[111.5]=0.1209*1.25; 	
    XSectionMap_tth[112.0]=0.1194*1.25; 	
    XSectionMap_tth[112.5]=0.1179*1.25; 	
    XSectionMap_tth[113.0]=0.1164*1.25; 	
    XSectionMap_tth[113.5]=0.1149*1.25; 	
    XSectionMap_tth[114.0]=0.1134*1.25; 	
    XSectionMap_tth[114.5]=0.1120*1.25; 	
    XSectionMap_tth[115.0]=0.1106*1.25; 	
    XSectionMap_tth[115.5]=0.1092*1.25; 	
    XSectionMap_tth[116.0]=0.1078*1.25; 	
    XSectionMap_tth[116.5]=0.1065*1.25; 	
    XSectionMap_tth[117.0]=0.1051*1.25; 	
    XSectionMap_tth[117.5]=0.1038*1.25; 	
    XSectionMap_tth[118.0]=0.1025*1.25; 	
    XSectionMap_tth[118.5]=0.1013*1.25; 	
    XSectionMap_tth[119.0]=0.1000*1.25; 	
    XSectionMap_tth[119.5]=0.09878*1.25; 
    XSectionMap_tth[120.0]=0.09756*1.25; 
    XSectionMap_tth[120.5]=0.09636*1.25; 
    XSectionMap_tth[121.0]=0.09518*1.25; 
    XSectionMap_tth[121.5]=0.09402*1.25; 
    XSectionMap_tth[122.0]=0.09287*1.25; 
    XSectionMap_tth[122.5]=0.09174*1.25; 
    XSectionMap_tth[123.0]=0.09063*1.25; 
    XSectionMap_tth[123.5]=0.08954*1.25; 
    XSectionMap_tth[124.0]=0.08846*1.25; 
    XSectionMap_tth[124.5]=0.08739*1.25; 
    XSectionMap_tth[125.0]=0.08634*1.25; 
    XSectionMap_tth[125.5]=0.08530*1.25; 
    XSectionMap_tth[126.0]=0.08428*1.25; 
    XSectionMap_tth[126.5]=0.08327*1.25; 
    XSectionMap_tth[127.0]=0.08227*1.25; 
    XSectionMap_tth[127.5]=0.08129*1.25; 
    XSectionMap_tth[128.0]=0.08032*1.25; 
    XSectionMap_tth[128.5]=0.07937*1.25; 
    XSectionMap_tth[129.0]=0.07842*1.25; 
    XSectionMap_tth[129.5]=0.07750*1.25; 
    XSectionMap_tth[130.0]=0.07658*1.25; 
    XSectionMap_tth[130.5]=0.07568*1.25; 
    XSectionMap_tth[131.0]=0.07479*1.25; 
    XSectionMap_tth[131.5]=0.07391*1.25; 
    XSectionMap_tth[132.0]=0.07304*1.25; 
    XSectionMap_tth[132.5]=0.07219*1.25; 
    XSectionMap_tth[133.0]=0.07135*1.25; 
    XSectionMap_tth[133.5]=0.07052*1.25; 
    XSectionMap_tth[134.0]=0.06970*1.25; 
    XSectionMap_tth[134.5]=0.06890*1.25; 
    XSectionMap_tth[135.0]=0.06810*1.25; 
    XSectionMap_tth[135.5]=0.06731*1.25; 
    XSectionMap_tth[136.0]=0.06654*1.25; 
    XSectionMap_tth[136.5]=0.06577*1.25; 
    XSectionMap_tth[137.0]=0.06502*1.25; 
    XSectionMap_tth[137.5]=0.06428*1.25; 
    XSectionMap_tth[138.0]=0.06355*1.25; 
    XSectionMap_tth[138.5]=0.06282*1.25; 
    XSectionMap_tth[139.0]=0.06211*1.25; 
    XSectionMap_tth[139.5]=0.06141*1.25; 
    XSectionMap_tth[140.0]=0.06072*1.25; 
    XSectionMap_tth[141.0]=0.05937*1.25; 
    XSectionMap_tth[142.0]=0.05807*1.25; 
    XSectionMap_tth[143.0]=0.05680*1.25; 
    XSectionMap_tth[144.0]=0.05556*1.25; 
    XSectionMap_tth[145.0]=0.05435*1.25; 
    XSectionMap_tth[146.0]=0.05316*1.25; 
    XSectionMap_tth[147.0]=0.05200*1.25; 
    XSectionMap_tth[148.0]=0.05087*1.25; 
    XSectionMap_tth[149.0]=0.04976*1.25; 
    XSectionMap_tth[150.0]=0.04869*1.25; 
    XSectionMap_tth[151.0]=0.04765*1.25; 
    XSectionMap_tth[152.0]=0.04663*1.25; 
    XSectionMap_tth[153.0]=0.04564*1.25; 
    XSectionMap_tth[154.0]=0.04468*1.25; 
    XSectionMap_tth[155.0]=0.04374*1.25; 
    XSectionMap_tth[156.0]=0.04283*1.25; 
    XSectionMap_tth[157.0]=0.04194*1.25; 
    XSectionMap_tth[158.0]=0.04108*1.25; 
    XSectionMap_tth[159.0]=0.04024*1.25; 
    XSectionMap_tth[160.0]=0.03942*1.25; 
    XSectionMap_tth[162.0]=0.03783*1.25; 
    XSectionMap_tth[164.0]=0.03632*1.25; 
    XSectionMap_tth[166.0]=0.03488*1.25; 
    XSectionMap_tth[168.0]=0.03350*1.25; 
    XSectionMap_tth[170.0]=0.03219*1.25; 
    XSectionMap_tth[172.0]=0.03094*1.25; 
    XSectionMap_tth[174.0]=0.02975*1.25; 
    XSectionMap_tth[176.0]=0.02862*1.25; 
    XSectionMap_tth[178.0]=0.02755*1.25; 
    XSectionMap_tth[180.0]=0.02652*1.25; 
    XSectionMap_tth[182.0]=0.02553*1.25; 
    XSectionMap_tth[184.0]=0.02459*1.25; 
    XSectionMap_tth[186.0]=0.02370*1.25; 
    XSectionMap_tth[188.0]=0.02286*1.25; 
    XSectionMap_tth[190.0]=0.02206*1.25; 
    XSectionMap_tth[192.0]=0.02128*1.25; 
    XSectionMap_tth[194.0]=0.02052*1.25; 
    XSectionMap_tth[196.0]=0.01981*1.25; 
    XSectionMap_tth[198.0]=0.01913*1.25; 
    XSectionMap_tth[200.0]=0.01849*1.25; 
    XSectionMap_tth[202.0]=0.01787*1.25; 
    XSectionMap_tth[204.0]=0.01727*1.25; 
    XSectionMap_tth[206.0]=0.01670*1.25; 
    XSectionMap_tth[208.0]=0.01615*1.25; 
    XSectionMap_tth[210.0]=0.01562*1.25; 
    XSectionMap_tth[212.0]=0.01512*1.25; 
    XSectionMap_tth[214.0]=0.01463*1.25; 
    XSectionMap_tth[216.0]=0.01417*1.25; 
    XSectionMap_tth[218.0]=0.01373*1.25; 
    XSectionMap_tth[220.0]=0.01330*1.25; 
    XSectionMap_tth[222.0]=0.01289*1.25; 
    XSectionMap_tth[224.0]=0.01251*1.25; 
    XSectionMap_tth[226.0]=0.01213*1.25; 
    XSectionMap_tth[228.0]=0.01178*1.25; 
    XSectionMap_tth[230.0]=0.01143*1.25; 
    XSectionMap_tth[232.0]=0.01110*1.25; 
    XSectionMap_tth[234.0]=0.01077*1.25; 
    XSectionMap_tth[236.0]=0.01046*1.25; 
    XSectionMap_tth[238.0]=0.01016*1.25; 
    XSectionMap_tth[240.0]=0.009873*1.25;
    XSectionMap_tth[242.0]=0.009597*1.25;
    XSectionMap_tth[244.0]=0.009331*1.25;
    XSectionMap_tth[246.0]=0.009076*1.25;
    XSectionMap_tth[248.0]=0.008830*1.25;
    XSectionMap_tth[250.0]=0.008593*1.25;
    XSectionMap_tth[252.0]=0.008363*1.25;
    XSectionMap_tth[254.0]=0.008142*1.25;
    XSectionMap_tth[256.0]=0.007928*1.25;
    XSectionMap_tth[258.0]=0.007722*1.25;
    XSectionMap_tth[260.0]=0.007524*1.25;
    XSectionMap_tth[262.0]=0.007333*1.25;
    XSectionMap_tth[264.0]=0.007149*1.25;
    XSectionMap_tth[266.0]=0.006972*1.25;
    XSectionMap_tth[268.0]=0.006801*1.25;
    XSectionMap_tth[270.0]=0.006636*1.25;
    XSectionMap_tth[272.0]=0.006476*1.25;
    XSectionMap_tth[274.0]=0.006322*1.25;
    XSectionMap_tth[276.0]=0.006173*1.25;
    XSectionMap_tth[278.0]=0.006028*1.25;
    XSectionMap_tth[280.0]=0.005889*1.25;
    XSectionMap_tth[282.0]=0.005754*1.25;
    XSectionMap_tth[284.0]=0.005623*1.25;
    XSectionMap_tth[286.0]=0.005497*1.25;
    XSectionMap_tth[288.0]=0.005374*1.25;
    XSectionMap_tth[290.0]=0.005256*1.25;
    XSectionMap_tth[295.0]=0.004975*1.25;
    XSectionMap_tth[300.0]=0.004719*1.25;

}

void Normalization_8TeV::FillSignalTypes(){
	
	SignalTypeMap[-57]=std::make_pair<TString,double>("ggh",123);
	SignalTypeMap[-58]=std::make_pair<TString,double>("vbf",123);
	SignalTypeMap[-60]=std::make_pair<TString,double>("wzh",123);
	SignalTypeMap[-59]=std::make_pair<TString,double>("tth",123);
	SignalTypeMap[-53]=std::make_pair<TString,double>("ggh",121);
	SignalTypeMap[-54]=std::make_pair<TString,double>("vbf",121);
	SignalTypeMap[-56]=std::make_pair<TString,double>("wzh",121);
	SignalTypeMap[-55]=std::make_pair<TString,double>("tth",121);
	SignalTypeMap[-65]=std::make_pair<TString,double>("ggh",160);
	SignalTypeMap[-66]=std::make_pair<TString,double>("vbf",160);
	SignalTypeMap[-68]=std::make_pair<TString,double>("wzh",160);
	SignalTypeMap[-67]=std::make_pair<TString,double>("tth",160);
	SignalTypeMap[-61]=std::make_pair<TString,double>("ggh",155);
	SignalTypeMap[-62]=std::make_pair<TString,double>("vbf",155);
	SignalTypeMap[-64]=std::make_pair<TString,double>("wzh",155);
	SignalTypeMap[-63]=std::make_pair<TString,double>("tth",155);
	SignalTypeMap[-49]=std::make_pair<TString,double>("ggh",150);
	SignalTypeMap[-50]=std::make_pair<TString,double>("vbf",150);
	SignalTypeMap[-52]=std::make_pair<TString,double>("wzh",150);
	SignalTypeMap[-51]=std::make_pair<TString,double>("tth",150);
	SignalTypeMap[-45]=std::make_pair<TString,double>("ggh",145);
	SignalTypeMap[-46]=std::make_pair<TString,double>("vbf",145);
	SignalTypeMap[-48]=std::make_pair<TString,double>("wzh",145);
	SignalTypeMap[-47]=std::make_pair<TString,double>("tth",145);
	SignalTypeMap[-33]=std::make_pair<TString,double>("ggh",140);
	SignalTypeMap[-34]=std::make_pair<TString,double>("vbf",140);
	SignalTypeMap[-36]=std::make_pair<TString,double>("wzh",140);
	SignalTypeMap[-35]=std::make_pair<TString,double>("tth",140);
	SignalTypeMap[-41]=std::make_pair<TString,double>("ggh",135);
	SignalTypeMap[-42]=std::make_pair<TString,double>("vbf",135);
	SignalTypeMap[-44]=std::make_pair<TString,double>("wzh",135);
	SignalTypeMap[-43]=std::make_pair<TString,double>("tth",135);
	SignalTypeMap[-29]=std::make_pair<TString,double>("ggh",130);
	SignalTypeMap[-30]=std::make_pair<TString,double>("vbf",130);
	SignalTypeMap[-32]=std::make_pair<TString,double>("wzh",130);
	SignalTypeMap[-31]=std::make_pair<TString,double>("tth",130);
	SignalTypeMap[-37]=std::make_pair<TString,double>("ggh",125);
	SignalTypeMap[-38]=std::make_pair<TString,double>("vbf",125);
	SignalTypeMap[-40]=std::make_pair<TString,double>("wzh",125);
	SignalTypeMap[-39]=std::make_pair<TString,double>("tth",125);
	SignalTypeMap[-25]=std::make_pair<TString,double>("ggh",120);
	SignalTypeMap[-26]=std::make_pair<TString,double>("vbf",120);
	SignalTypeMap[-28]=std::make_pair<TString,double>("wzh",120);
	SignalTypeMap[-27]=std::make_pair<TString,double>("tth",120);
	SignalTypeMap[-21]=std::make_pair<TString,double>("ggh",115);
	SignalTypeMap[-22]=std::make_pair<TString,double>("vbf",115);
	SignalTypeMap[-24]=std::make_pair<TString,double>("wzh",115);
	SignalTypeMap[-23]=std::make_pair<TString,double>("tth",115);
	SignalTypeMap[-17]=std::make_pair<TString,double>("ggh",110);
	SignalTypeMap[-18]=std::make_pair<TString,double>("vbf",110);
	SignalTypeMap[-19]=std::make_pair<TString,double>("wzh",110);
	SignalTypeMap[-20]=std::make_pair<TString,double>("tth",110);
	SignalTypeMap[-13]=std::make_pair<TString,double>("ggh",105);
	SignalTypeMap[-14]=std::make_pair<TString,double>("vbf",105);
	SignalTypeMap[-16]=std::make_pair<TString,double>("wzh",105);
	SignalTypeMap[-15]=std::make_pair<TString,double>("tth",105);
	SignalTypeMap[-69]=std::make_pair<TString,double>("ggh",100);
	SignalTypeMap[-70]=std::make_pair<TString,double>("vbf",100);
	SignalTypeMap[-72]=std::make_pair<TString,double>("wzh",100);
	SignalTypeMap[-71]=std::make_pair<TString,double>("tth",100);

}
double Normalization_8TeV::GetBR(double mass) {

  for (std::map<double, double>::const_iterator iter = BranchingRatioMap.begin();  iter != BranchingRatioMap.end(); ++iter) {
    if (mass==iter->first) return iter->second;
    if (mass>iter->first) {
      double lowmass = iter->first;
      double lowbr = iter->second;
      ++iter;
      if (mass<iter->first) {
        double highmass = iter->first;
        double highbr = iter->second;
        double br = (highbr-lowbr)/(highmass-lowmass)*(mass-lowmass)+lowbr;
        return br;
      }
      --iter;
    }
  }
  
  std::cout << "Warning branching ratio outside range of 90-250GeV!!!!" << std::endl;
  //std::exit(1);
  
}


double Normalization_8TeV::GetXsection(double mass, TString HistName) {

  std::map<double,double> *XSectionMap;

  if (HistName.Contains("ggh")) {
	XSectionMap = &XSectionMap_ggh;
  } else if (HistName.Contains("vbf")) {
	XSectionMap = &XSectionMap_vbf;
  } else if (HistName.Contains("wzh")) {
	XSectionMap = &XSectionMap_wzh;
  } else if (HistName.Contains("tth")) {
	XSectionMap = &XSectionMap_tth;
  } else {
    std::cout << "Warning ggh, vbf, wzh, or tth not found in histname!!!!" << std::endl;
    //exit(1);
  }

  for (std::map<double, double>::const_iterator iter = XSectionMap->begin();  iter != XSectionMap->end(); ++iter) {
    if (mass==iter->first) return iter->second;
    if (mass>iter->first) {
      double lowmass = iter->first;
      double lowxsec = iter->second;
      ++iter;
      if (mass<iter->first) {
        double highmass = iter->first;
        double highxsec = iter->second;
        double xsec = (highxsec-lowxsec)/(highmass-lowmass)*(mass-lowmass)+lowxsec;
        return xsec;
      }
      --iter;
    }
  }

  std::cout << "Warning cross section outside range of 80-300GeV!!!!" << std::endl;
  //exit(1);

}
// Simple accessors
TString Normalization_8TeV::GetProcess(int ty){
 return SignalTypeMap[ty].first;
}

double Normalization_8TeV::GetMass(int ty){
 return SignalTypeMap[ty].second;	
}
double Normalization_8TeV::GetXsection(int ty){
	std::pair<TString,double> proc_mass = SignalTypeMap[ty];
	return GetXsection(proc_mass.second,proc_mass.first);
}
double Normalization_8TeV::GetBR(int ty){
	std::pair<TString,double> proc_mass = SignalTypeMap[ty];
	return GetBR(proc_mass.second);
}

double Normalization_8TeV::GetXsection(double mass) {

  double xsec = GetXsection(mass,"ggh") + GetXsection(mass,"vbf") + GetXsection(mass,"wzh") + GetXsection(mass,"tth");
  return xsec;

}

double Normalization_8TeV::GetNorm(double mass1, TH1F* hist1, double mass2, TH1F* hist2, double mass) {

  double br = GetBR(mass);
  double br1 = GetBR(mass1);
  double br2 = GetBR(mass2);
  
  double xsec = GetXsection(mass, hist1->GetName());
  double xsec1 = GetXsection(mass1, hist1->GetName());
  double xsec2 = GetXsection(mass2, hist2->GetName());
  
  double alpha = 1.0*(mass-mass1)/(mass2-mass1);
  double effAcc1 = hist1->Integral()/(xsec1*br1);
  double effAcc2 = hist2->Integral()/(xsec2*br2);

  double Normalization = (xsec*br)*(effAcc1 + alpha * (effAcc2 - effAcc1));
  return Normalization;
  
}

void Normalization_8TeV::CheckNorm(double Min, double Max, double Step, TString histname="") {

  vector <double> Mass;
  vector <double> BranchingRatio;
  vector <double> XSection;
  for (double i=Min; i<Max; i+=Step) {
    Mass.push_back(i);
    BranchingRatio.push_back(GetBR(i));
    if (histname=="") XSection.push_back(GetXsection(i));
    else XSection.push_back(GetXsection(i,histname));
  }

  TGraph* BranchGraph = new TGraph(Mass.size(),&Mass[0],&BranchingRatio[0]);
  TGraph* XSectionGraph = new TGraph(Mass.size(),&Mass[0],&XSection[0]);
  BranchGraph->SetTitle("Interpolated Branching Ratios");
  XSectionGraph->SetTitle("Interpolated Cross Sections");
  BranchGraph->SetMarkerStyle(20);
  XSectionGraph->SetMarkerStyle(20);
  BranchGraph->SetMarkerSize(1);
  XSectionGraph->SetMarkerSize(1);

  TCanvas* c1 = new TCanvas("c1","c1",800,650);
  c1->cd();
  BranchGraph->Draw("AP");
  c1->SaveAs("BranchingRatios.png");
  c1->Clear();
  XSectionGraph->Draw("AP");
  c1->SaveAs("XSections.png");

  delete BranchGraph;
  delete XSectionGraph;
  delete c1;

}

